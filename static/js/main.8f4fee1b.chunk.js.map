{"version":3,"sources":["assets/huckberry-logo.svg","assets/icon-bag.svg","assets/icon-search.svg","components/Announcement.jsx","components/Banner.jsx","components/SearchBar.jsx","components/Submenu.jsx","components/NavigationMenu.jsx","Header.js","serviceWorker.js","index.js"],"names":["module","exports","Announcement","className","href","Banner","useState","isShowHover","setShowHover","onClick","src","Logo","alt","onMouseEnter","style","textDecoration","BagIcon","display","onMouseLeave","SearchBar","searchkey","setSearchKey","method","action","autoComplete","type","placeholder","name","value","onChange","e","SearchIcon","Submenu","props","features","temp","ctr","data","tiles","forEach","item","push","children","map","cat","key","title","url","length","undefined","subitem","imageUrl","NavigationMenu","submenuData","setSubmenuData","Header","navData","navigation","items","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f4fee1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/huckberry-logo.8996b790.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-bag.a6304390.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-search.9e18e374.svg\";","import React from 'react';\r\n\r\n//style\r\nimport './Announcement.css';\r\n\r\nconst Announcement = () => {\r\n    return (\r\n        <div className=\"announcement-wrapper\">\r\n            <a href=\"/#\">\r\n                FREE U.S. SHIPPING $75+ &nbsp;|&nbsp; FREE RETURNS &nbsp;|&nbsp; BEST PRICE GUARANTEED\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Announcement;\r\n","import React, { useState } from 'react';\r\nimport SVG from 'react-inlinesvg';\r\n\r\n//style\r\nimport './Banner.css';\r\n\r\n//icons\r\nimport Logo from '../assets/huckberry-logo.svg';\r\nimport BagIcon from '../assets/icon-bag.svg'\r\n\r\nconst Banner = () => {\r\n    const [isShowHover, setShowHover] = useState(false);\r\n\r\n    return (\r\n        <div className=\"content-wrapper\" onClick={() => setShowHover(false)}>\r\n            <div className=\"banner-content-wrapper\">\r\n                <div className=\"full-width\">\r\n                    <div className=\"banner-row\">\r\n                        <div className=\"banner-col\"></div>\r\n                        <div className=\"banner-col\">\r\n                            <h1 className=\"logo-wrapper\">\r\n                                <SVG src={Logo} alt='Huckberry' />\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"banner-col pr\">\r\n                            <ul className=\"account-wrapper\">\r\n                                <li className=\"acc-li\">\r\n                                    <button \r\n                                      onMouseEnter={() => setShowHover(true)}>\r\n                                        My Account\r\n                                    </button>\r\n                                </li>\r\n                                <li>\r\n                                    <button style={{textDecoration: 'none'}}>\r\n                                        <SVG src={BagIcon} alt='Cart' /> (0)\r\n                                    </button>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"account-hover-wrapper\"\r\n                               style={!isShowHover ? {display : 'none'} : {}}\r\n                               onMouseLeave={() => setShowHover(false)}>\r\n                                <ul className=\"account-hover-list-wrapper\">\r\n                                    <li>Details</li>\r\n                                    <li>Order History</li>\r\n                                    <li>Preferences</li>\r\n                                    <li>Back in Stock</li>\r\n                                    <li>Log Out</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState } from 'react';\r\nimport SVG from 'react-inlinesvg';\r\n\r\n//style\r\nimport './SearchBar.css';\r\n\r\n//icon\r\nimport SearchIcon from '../assets/icon-search.svg';\r\n\r\nconst SearchBar = () => {\r\n    const [ searchkey, setSearchKey ] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"searchbar-wrapper\">\r\n            <div className=\"media-fixed\">\r\n                <div className=\"form-wrapper\">\r\n                    <form method=\"get\" action=\"/search\" autoComplete=\"off\">\r\n                        <input type=\"text\" placeholder=\"Search\" name=\"keywords\" \r\n                          value={searchkey} onChange={e => setSearchKey(e.value)} />\r\n                        <button type=\"submit\">\r\n                            <SVG src={SearchIcon} />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\n//styles\r\nimport './Submenu.css';\r\n\r\nconst Submenu = (props) => {\r\n    let features = [];\r\n    let temp = [];\r\n    let ctr = 1;\r\n\r\n    //distribute the features by 2\r\n    props.data.features && props.data.features.tiles.forEach(item => {\r\n        if(ctr%2===0) {\r\n            //push to temp storage first then push to main storage\r\n            temp.push(item);\r\n            features.push(temp);\r\n            temp = [];\r\n         } else {\r\n            //store to temp storage\r\n            temp.push(item);\r\n         }\r\n         ctr++;\r\n    });\r\n\r\n    return (\r\n        <div className=\"submenu-wrapper\">\r\n            <div className=\"main-grid\">\r\n                <div className=\"categories-grid condensed-body\">\r\n                    { props.data.children ? props.data.children.map(cat => (\r\n                        <div className=\"categories-column\" key={cat.title}>\r\n                            <h4>\r\n                                <a href={cat.url}>{cat.title}</a>\r\n                            </h4>\r\n                            <ul>\r\n                                { cat.children.length>0 ? cat.children.map(item => (\r\n                                    <li key={item.title}><a href={item.url}>{item.title}</a></li>\r\n                                )) : undefined }\r\n                            </ul>\r\n                        </div>\r\n                    )) : undefined }\r\n                </div>\r\n                <div className=\"features-grid condensed-body\">\r\n                    { features.length>0 ? features.map(item => (\r\n                        <div key={item[0].title}>\r\n                            { item.map(subitem => (\r\n                                <a href={subitem.url} key={subitem.title}>\r\n                                    <img className=\"feature-image\" src={subitem.imageUrl} alt={subitem.title} />\r\n                                    <span className=\"feature-title\">{ subitem.title }</span>\r\n                                </a>\r\n                              ))\r\n                            }\r\n                        </div>\r\n                    )) : undefined}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Submenu;\r\n","import React, { useState } from 'react';\r\n\r\n//styles\r\nimport './NavigationMenu.css';\r\n\r\n//sub-components\r\nimport SearchBar from './SearchBar';\r\nimport Submenu from './Submenu';\r\n\r\nconst NavigationMenu = (props) => {\r\n    const [submenuData, setSubmenuData] = useState(undefined);\r\n\r\n    return (\r\n        <div className=\"nav-wrapper\" onClick={() => setSubmenuData(undefined)}>\r\n            <div className=\"nav-bg\" />\r\n            <nav>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"media\">\r\n                        <div className=\"nav-list\">\r\n                            { props.data ? props.data.map(item => (\r\n                                <a href={item.url} key={item.title} \r\n                                    onMouseEnter={() => setSubmenuData(item)}>\r\n                                    {item.title}\r\n                                </a>\r\n                            )) : undefined }\r\n                        </div>\r\n                        <div className=\"media-fixed pr\">\r\n                            <SearchBar />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"grid-container submenu-grid\">\r\n                    { submenuData && submenuData.children.length>0 ? (\r\n                        <Submenu data={submenuData} onMouseLeave={() => setSubmenuData(undefined)} />\r\n                    ) : undefined }\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationMenu;","import React, { useState } from 'react';\r\nimport './Header.css';\r\n\r\n//data\r\nimport data from './assets/NavigationData.json';\r\n\r\n//components\r\nimport Announcement from './components/Announcement';\r\nimport Banner from './components/Banner';\r\nimport NavigationMenu from './components/NavigationMenu';\r\n\r\nconst Header = () => {\r\n  const [navData] = useState(data);\r\n\r\n  return (\r\n    <div className=\"Header\">\r\n      <Announcement />\r\n      <Banner />\r\n      <NavigationMenu data={navData.navigation.items || []} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Header from './Header';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Header />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}